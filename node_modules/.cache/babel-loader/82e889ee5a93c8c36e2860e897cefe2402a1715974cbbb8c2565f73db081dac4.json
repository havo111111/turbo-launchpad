{"ast":null,"code":"import * as env from \"@walletconnect/environment\";\nimport { ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP, AES_BROWSER_ALGO, AES_LENGTH, HMAC_BROWSER_ALGO, HMAC_BROWSER, HMAC_LENGTH, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, LENGTH_512 } from \"../constants\";\nexport function getAlgo(type) {\n  return type === AES_BROWSER_ALGO ? {\n    length: AES_LENGTH,\n    name: AES_BROWSER_ALGO\n  } : {\n    hash: {\n      name: HMAC_BROWSER_ALGO\n    },\n    name: HMAC_BROWSER\n  };\n}\nexport function getOps(type) {\n  return type === AES_BROWSER_ALGO ? [ENCRYPT_OP, DECRYPT_OP] : [SIGN_OP, VERIFY_OP];\n}\nexport async function browserExportKey(cryptoKey) {\n  let _type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AES_BROWSER_ALGO;\n  const subtle = env.getSubtleCrypto();\n  return new Uint8Array(await subtle.exportKey(\"raw\", cryptoKey));\n}\nexport async function browserImportKey(buffer) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AES_BROWSER_ALGO;\n  return env.getSubtleCrypto().importKey(\"raw\", buffer, getAlgo(type), true, getOps(type));\n}\nexport async function browserAesEncrypt(iv, key, data) {\n  const subtle = env.getSubtleCrypto();\n  const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);\n  const result = await subtle.encrypt({\n    iv,\n    name: AES_BROWSER_ALGO\n  }, cryptoKey, data);\n  return new Uint8Array(result);\n}\nexport async function browserAesDecrypt(iv, key, data) {\n  const subtle = env.getSubtleCrypto();\n  const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);\n  const result = await subtle.decrypt({\n    iv,\n    name: AES_BROWSER_ALGO\n  }, cryptoKey, data);\n  return new Uint8Array(result);\n}\nexport async function browserHmacSha256Sign(key, data) {\n  const subtle = env.getSubtleCrypto();\n  const cryptoKey = await browserImportKey(key, HMAC_BROWSER);\n  const signature = await subtle.sign({\n    length: HMAC_LENGTH,\n    name: HMAC_BROWSER\n  }, cryptoKey, data);\n  return new Uint8Array(signature);\n}\nexport async function browserHmacSha512Sign(key, data) {\n  const subtle = env.getSubtleCrypto();\n  const cryptoKey = await browserImportKey(key, HMAC_BROWSER);\n  const signature = await subtle.sign({\n    length: LENGTH_512,\n    name: HMAC_BROWSER\n  }, cryptoKey, data);\n  return new Uint8Array(signature);\n}\nexport async function browserSha256(data) {\n  const subtle = env.getSubtleCrypto();\n  const result = await subtle.digest({\n    name: SHA256_BROWSER_ALGO\n  }, data);\n  return new Uint8Array(result);\n}\nexport async function browserSha512(data) {\n  const subtle = env.getSubtleCrypto();\n  const result = await subtle.digest({\n    name: SHA512_BROWSER_ALGO\n  }, data);\n  return new Uint8Array(result);\n}","map":{"version":3,"names":["env","ENCRYPT_OP","DECRYPT_OP","SIGN_OP","VERIFY_OP","AES_BROWSER_ALGO","AES_LENGTH","HMAC_BROWSER_ALGO","HMAC_BROWSER","HMAC_LENGTH","SHA256_BROWSER_ALGO","SHA512_BROWSER_ALGO","LENGTH_512","getAlgo","type","length","name","hash","getOps","browserExportKey","cryptoKey","_type","arguments","undefined","subtle","getSubtleCrypto","Uint8Array","exportKey","browserImportKey","buffer","importKey","browserAesEncrypt","iv","key","data","result","encrypt","browserAesDecrypt","decrypt","browserHmacSha256Sign","signature","sign","browserHmacSha512Sign","browserSha256","digest","browserSha512"],"sources":["../../../src/lib/browser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
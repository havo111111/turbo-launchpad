{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{createSlice}from'@reduxjs/toolkit';// Create a slice for user preferences\nconst preferencesSlice=createSlice({name:'preferences',initialState:{gasLimit:21000,slippage:1,favoriteTokens:[]},reducers:{setGasLimit:(state,action)=>{state.gasLimit=action.payload;},setSlippage:(state,action)=>{state.slippage=action.payload;},toggleFavoriteToken:(state,action)=>{const tokenAddress=action.payload;if(state.favoriteTokens.includes(tokenAddress)){state.favoriteTokens=state.favoriteTokens.filter(addr=>addr!==tokenAddress);}else{state.favoriteTokens.push(tokenAddress);}}}});// Create a slice for wallet state\nconst walletSlice=createSlice({name:'wallet',initialState:{isConnected:false,account:'',chainId:null},reducers:{setWalletState:(state,action)=>{state.isConnected=action.payload.isConnected;state.account=action.payload.account;state.chainId=action.payload.chainId;}}});export const{setGasLimit,setSlippage,toggleFavoriteToken}=preferencesSlice.actions;export const{setWalletState}=walletSlice.actions;export const store=configureStore({reducer:{preferences:preferencesSlice.reducer,wallet:walletSlice.reducer}});export default store;","map":{"version":3,"names":["configureStore","createSlice","preferencesSlice","name","initialState","gasLimit","slippage","favoriteTokens","reducers","setGasLimit","state","action","payload","setSlippage","toggleFavoriteToken","tokenAddress","includes","filter","addr","push","walletSlice","isConnected","account","chainId","setWalletState","actions","store","reducer","preferences","wallet"],"sources":["/Users/admin/turbo-launchpad/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Create a slice for user preferences\nconst preferencesSlice = createSlice({\n  name: 'preferences',\n  initialState: {\n    gasLimit: 21000,\n    slippage: 1,\n    favoriteTokens: [] as string[],\n  },\n  reducers: {\n    setGasLimit: (state, action) => {\n      state.gasLimit = action.payload;\n    },\n    setSlippage: (state, action) => {\n      state.slippage = action.payload;\n    },\n    toggleFavoriteToken: (state, action) => {\n      const tokenAddress = action.payload;\n      if (state.favoriteTokens.includes(tokenAddress)) {\n        state.favoriteTokens = state.favoriteTokens.filter(\n          (addr) => addr !== tokenAddress\n        );\n      } else {\n        state.favoriteTokens.push(tokenAddress);\n      }\n    },\n  },\n});\n\n// Create a slice for wallet state\nconst walletSlice = createSlice({\n  name: 'wallet',\n  initialState: {\n    isConnected: false,\n    account: '',\n    chainId: null as number | null,\n  },\n  reducers: {\n    setWalletState: (state, action) => {\n      state.isConnected = action.payload.isConnected;\n      state.account = action.payload.account;\n      state.chainId = action.payload.chainId;\n    },\n  },\n});\n\nexport const {\n  setGasLimit,\n  setSlippage,\n  toggleFavoriteToken,\n} = preferencesSlice.actions;\n\nexport const {\n  setWalletState,\n} = walletSlice.actions;\n\nexport const store = configureStore({\n  reducer: {\n    preferences: preferencesSlice.reducer,\n    wallet: walletSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AACA,KAAM,CAAAC,gBAAgB,CAAGD,WAAW,CAAC,CACnCE,IAAI,CAAE,aAAa,CACnBC,YAAY,CAAE,CACZC,QAAQ,CAAE,KAAK,CACfC,QAAQ,CAAE,CAAC,CACXC,cAAc,CAAE,EAClB,CAAC,CACDC,QAAQ,CAAE,CACRC,WAAW,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC9BD,KAAK,CAACL,QAAQ,CAAGM,MAAM,CAACC,OAAO,CACjC,CAAC,CACDC,WAAW,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,CAC9BD,KAAK,CAACJ,QAAQ,CAAGK,MAAM,CAACC,OAAO,CACjC,CAAC,CACDE,mBAAmB,CAAEA,CAACJ,KAAK,CAAEC,MAAM,GAAK,CACtC,KAAM,CAAAI,YAAY,CAAGJ,MAAM,CAACC,OAAO,CACnC,GAAIF,KAAK,CAACH,cAAc,CAACS,QAAQ,CAACD,YAAY,CAAC,CAAE,CAC/CL,KAAK,CAACH,cAAc,CAAGG,KAAK,CAACH,cAAc,CAACU,MAAM,CAC/CC,IAAI,EAAKA,IAAI,GAAKH,YACrB,CAAC,CACH,CAAC,IAAM,CACLL,KAAK,CAACH,cAAc,CAACY,IAAI,CAACJ,YAAY,CAAC,CACzC,CACF,CACF,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAK,WAAW,CAAGnB,WAAW,CAAC,CAC9BE,IAAI,CAAE,QAAQ,CACdC,YAAY,CAAE,CACZiB,WAAW,CAAE,KAAK,CAClBC,OAAO,CAAE,EAAE,CACXC,OAAO,CAAE,IACX,CAAC,CACDf,QAAQ,CAAE,CACRgB,cAAc,CAAEA,CAACd,KAAK,CAAEC,MAAM,GAAK,CACjCD,KAAK,CAACW,WAAW,CAAGV,MAAM,CAACC,OAAO,CAACS,WAAW,CAC9CX,KAAK,CAACY,OAAO,CAAGX,MAAM,CAACC,OAAO,CAACU,OAAO,CACtCZ,KAAK,CAACa,OAAO,CAAGZ,MAAM,CAACC,OAAO,CAACW,OAAO,CACxC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXd,WAAW,CACXI,WAAW,CACXC,mBACF,CAAC,CAAGZ,gBAAgB,CAACuB,OAAO,CAE5B,MAAO,MAAM,CACXD,cACF,CAAC,CAAGJ,WAAW,CAACK,OAAO,CAEvB,MAAO,MAAM,CAAAC,KAAK,CAAG1B,cAAc,CAAC,CAClC2B,OAAO,CAAE,CACPC,WAAW,CAAE1B,gBAAgB,CAACyB,OAAO,CACrCE,MAAM,CAAET,WAAW,CAACO,OACtB,CACF,CAAC,CAAC,CAKF,cAAe,CAAAD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}